{"version":3,"sources":["components/NotFoundView.js","containers/PostView.js","components/Post.js","containers/PostListView.js","containers/ProgrammingPostListView.js","containers/BooksPostListView.js","containers/InternetPostListView.js","containers/ThoughtsPostListView.js","containers/ArtPostListView.js","containers/AboutView.js","containers/ProjectView.js","containers/ContactView.js","containers/BookshelfView.js","routes.js","containers/BaseLayout.js","App.js","serviceWorker.js","index.js"],"names":["NotFoundView","react_default","a","createElement","className","id","ReactMarkdown","require","PostView","state","article","_this2","this","articleSlug","props","match","params","getData","_ref","Object","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","axios","get","concat","abrupt","sent","t0","setState","stop","apply","arguments","_ref2","_callee2","data","_context2","undefined","evalData","window","open","is_visible","components_NotFoundView","publishedDate","moment","published_date","format","htmlContent","content","title","header","footer","tags","articleHtml","headerSection","footerSection","style","color","fontStyle","marginBottom","escapeHtml","source","textAlign","fontWeight","fontSize","marginTop","tagSection","map","tag","index","key","NavLink","to","Divider","Button","onClick","handleTwitterBtnClick","Icon","name","React","Component","Post","date","href","slug","paddingTop","lead","PostListView","dataLoaded","articles","activePage","then","res","console","error","message","_this3","_this$state","posts","numPosts","filteredArticles","filter","length","paddingLeft","slice","components_Post","Math","ceil","Pagination","defaultActivePage","totalPages","onPageChange","event","handlePageChange","ProgrammingPostListView","BooksPostListView","InternetPostListView","ThoughtsPostListView","ArtPostListView","AboutView","ProjectView","ContactView","BookshelfView","Loader","forEach","item","splice","bookHtml","BaseRouter","Switch","Route","exact","path","component","BaseLayout","children","Grid","stackable","columns","Column","width","border","ReactGA","initialize","App","componentDidMount","pageview","location","pathname","search","componentDidUpdate","BrowserRouter","containers_BaseLayout","routes","Boolean","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b8c62ebc.chunk.js","sourcesContent":["import React from 'react';\n\nfunction NotFoundView() {\n  return (\n    <div className='ui container left aligned '>\n      <h1>404</h1>\n      <p id='about-text'>Page not found :(</p>\n    </div>\n  );\n}\n\nexport default NotFoundView;\n","import React from 'react';\nimport axios from 'axios';\nimport moment from 'moment';\nimport { Divider, Button, Icon } from 'semantic-ui-react';\nimport { NavLink } from 'react-router-dom';\n\nimport NotFoundView from '../components/NotFoundView';\n\nconst ReactMarkdown = require('react-markdown')\n\n\nclass PostView extends React.Component {\n  state = {\n    article: null\n  };\n\n  componentDidMount() {\n    const articleSlug = this.props.match.params.articleSlug;\n\n    const getData = async () => {\n      try {\n        return await axios.get(\n          `https://lukezsmith.herokuapp.com/api-site/blogposts/all/${articleSlug}/`\n        );\n      } catch (error) {\n        this.setState({ article: '404' });\n      }\n    };\n    const evalData = async () => {\n      const data = await getData();\n      if (data !== undefined) {\n        this.setState({ article: data });\n      }\n    };\n\n    evalData();\n  }\n\n  handleTwitterBtnClick() {\n    window.open('https://twitter.com/lukezsmith');\n  }\n\n  render() {\n    const { article } = this.state;\n    if (article === null) {\n      return null;\n    } else if (article === '404' || article.data.is_visible === false) {\n      return <NotFoundView />;\n    }\n\n    const publishedDate = moment(article.data.published_date).format(\n      'MMMM Do, YYYY'\n    );\n\n    const htmlContent = article.data.content;\n    const title = article.data.title;\n    const header = article.data.header;\n    const footer = article.data.footer;\n    const tags = article.data.tags;\n\n    let articleHtml = (\n      <div>\n        <NotFoundView />\n      </div>\n    );\n\n    let headerSection = null;\n    let footerSection = null;\n\n    if (header) {\n      headerSection = (\n        <div className='header-section'>\n          <div\n            style={{\n              color: 'rgb(153, 153, 153)',\n              fontStyle: 'italic',\n              marginBottom: '1%'\n            }}\n          >\n            <ReactMarkdown escapeHtml={false} source={header}></ReactMarkdown>\n          </div>\n          <div\n            style={{\n              color: 'rgb(153, 153, 153)',\n              textAlign: 'center',\n              fontWeight: '500',\n              fontSize: '1.2em'\n            }}\n          >\n            ~ ~ ~\n          </div>\n        </div>\n      );\n    }\n\n    if (footer) {\n      footerSection = (\n        <div className='footer-section'>\n          <div\n            style={{\n              color: 'rgb(153, 153, 153)',\n              textAlign: 'center',\n              fontWeight: '500',\n              fontSize: '1.2em'\n            }}\n          >\n            ~ ~ ~\n          </div>\n\n          <div\n            style={{\n              color: 'rgb(153, 153, 153)',\n              fontStyle: 'italic',\n              marginTop: '1%'\n            }}\n          >\n            <ReactMarkdown escapeHtml={false} source={footer}></ReactMarkdown>\n          </div>\n        </div>\n      );\n    }\n\n    let tagSection = null;\n    if (tags) {\n      tagSection = (\n        <div className='tag-section'>\n          {tags.map((tag, index) => (\n            <span key={index}>\n              <NavLink  style={{ fontSize: '0.9em' }} to={`/tag/${tag}`}>\n                #{tag}{' '}\n              </NavLink>\n            </span>\n          ))}\n        </div>\n      );\n    }\n\n    if (article.data !== undefined) {\n      articleHtml = (\n        <div id='article-detail-content'>\n          <h1 className='content-title'>{title}</h1>\n          <p className='content-date'>{publishedDate}</p>\n          <div className='listrow'>\n            {headerSection}\n            <div className='content-content'>\n              {/* {ReactHtmlParser(htmlContent)} */}\n              <ReactMarkdown escapeHtml={false} source={htmlContent}></ReactMarkdown>\n              \n            </div>\n            <Divider />\n            {footerSection}\n            {tagSection}\n\n            <div className='twitter-btn'>\n              <Button onClick={this.handleTwitterBtnClick} className='btn'>\n                <span>\n                  <Icon name='twitter'></Icon>\n                </span>\n                <span>Get in touch!</span>\n              </Button>\n            </div>\n          </div>\n        </div>\n      );\n    }\n\n    return <div>{articleHtml}</div>;\n  }\n}\n\nexport default PostView;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport moment from 'moment';\nimport { Divider } from 'semantic-ui-react';\n\nclass Post extends React.Component {\n  render() {\n    const { data } = this.props;\n\n    const date = moment(data.published_date).format('MMMM Do, YYYY');\n    return (\n      <div id='post-section'>\n        <div>\n          <a className='post-header' href={`/post/${data.slug}`}>\n            {data.title}\n          </a>\n          <p\n            style={{\n              fontWeight: '500',\n              color: '#999',\n              paddingTop: '1%'\n            }}\n          >\n            Posted on {date}\n          </p>\n          <div> {data.lead}</div>\n          <br />\n          <Divider />\n        </div>\n      </div>\n    );\n  }\n}\nPost.propTypes = {\n  data: PropTypes.object.isRequired\n};\nexport default Post;\n","import React from 'react';\nimport axios from 'axios';\n\nimport { Pagination } from 'semantic-ui-react';\nimport Post from '../components/Post';\n\nclass PostListView extends React.Component {\n  state = {\n    dataLoaded: false,\n    articles: null,\n    activePage: 1\n  };\n\n  async getData() {\n    try {\n      await axios\n        .get('https://lukezsmith.herokuapp.com/api-site/blogposts/all/')\n        .then((res) => {\n          this.setState({ articles: res });\n        });\n    } catch (error) {\n      console.error(`error: ${error.message}`);\n      this.setState({ articles: '404' });\n    }\n  }\n\n  handlePageChange(activePage) {\n    this.setState({ activePage });\n  }\n\n  async componentDidMount() {\n    await this.getData();\n    this.setState({ dataLoaded: true });\n  }\n\n  render() {\n    const { dataLoaded, articles, activePage } = this.state;\n\n    let posts = (\n      <div>\n        <h1>Oops, no posts yet!</h1> <p>Please check again later.</p>\n      </div>\n    );\n\n    let numPosts = 0;\n    if (dataLoaded === false) {\n      return null;\n    } else {\n      const filteredArticles = articles.data.filter(\n        (article) => article.is_visible === true\n      );\n      if (\n        articles.data !== undefined &&\n        articles.data !== '404' &&\n        filteredArticles.length !== 0\n      ) {\n        numPosts = filteredArticles.length;\n        posts = (\n          <ul style={{ paddingLeft: '0' }}>\n            {filteredArticles\n              .slice((activePage - 1) * 5, activePage * 5)\n              .map((article, index) => (\n                <Post key={index} data={article} />\n              ))}\n          </ul>\n        );\n        if (Math.ceil(numPosts / 5) === 1) {\n          return <div>{posts}</div>;\n        }\n      } else {\n        return <div>{posts}</div>;\n      }\n    }\n    return (\n      <div>\n        {posts}\n        <Pagination\n          defaultActivePage={1}\n          totalPages={Math.ceil(numPosts / 5)}\n          onPageChange={(event, data) => this.handlePageChange(data.activePage)}\n        />\n      </div>\n    );\n  }\n}\nexport default PostListView;\n","import React from 'react';\nimport axios from 'axios';\n\nimport { Pagination } from 'semantic-ui-react';\nimport Post from '../components/Post';\n\nclass ProgrammingPostListView extends React.Component {\n  state = {\n    dataLoaded: false,\n    articles: null,\n    activePage: 1\n  };\n\n  async getData() {\n    try {\n      await axios\n        .get('https://lukezsmith.herokuapp.com/api-site/blogposts/development/')\n        .then((res) => {\n          this.setState({ articles: res });\n        });\n    } catch (error) {\n      console.error(`error: ${error.message}`);\n      this.setState({ articles: '404' });\n    }\n  }\n\n  handlePageChange(activePage) {\n    this.setState({ activePage });\n  }\n\n  async componentDidMount() {\n    await this.getData();\n    this.setState({ dataLoaded: true });\n  }\n\n  render() {\n    const { dataLoaded, articles, activePage } = this.state;\n\n    let posts = (\n      <div>\n        <h1>Oops, no posts yet!</h1> <p>Please check again later.</p>\n      </div>\n    );\n\n    let numPosts = 0;\n    if (dataLoaded === false) {\n      return null;\n    } else {\n      const filteredArticles = articles.data.filter(\n        (article) => article.is_visible === true\n      );\n      if (\n        articles.data !== undefined &&\n        articles.data !== '404' &&\n        filteredArticles.length !== 0\n      ) {\n        numPosts = filteredArticles.length;\n        posts = (\n          <ul style={{ paddingLeft: '0' }}>\n            {filteredArticles\n              .slice((activePage - 1) * 5, activePage * 5)\n              .map((article, index) => (\n                <Post key={index} data={article} />\n              ))}\n          </ul>\n        );\n        if (Math.ceil(numPosts / 5) === 1) {\n          return <div>{posts}</div>;\n        }\n      } else {\n        return <div>{posts}</div>;\n      }\n    }\n    return (\n      <div>\n        {posts}\n        <Pagination\n          defaultActivePage={1}\n          totalPages={Math.ceil(numPosts / 5)}\n          onPageChange={(event, data) => this.handlePageChange(data.activePage)}\n        />\n      </div>\n    );\n  }\n}\nexport default ProgrammingPostListView;\n","import React from 'react';\nimport axios from 'axios';\n\nimport { Pagination } from 'semantic-ui-react';\nimport Post from '../components/Post';\n\nclass BooksPostListView extends React.Component {\n  state = {\n    dataLoaded: false,\n    articles: null,\n    activePage: 1\n  };\n\n  async getData() {\n    try {\n      await axios\n        .get('https://lukezsmith.herokuapp.com/api-site/blogposts/books/')\n        .then((res) => {\n          this.setState({ articles: res });\n        });\n    } catch (error) {\n      console.error(`error: ${error.message}`);\n      this.setState({ articles: '404' });\n    }\n  }\n\n  handlePageChange(activePage) {\n    this.setState({ activePage });\n  }\n\n  async componentDidMount() {\n    await this.getData();\n    this.setState({ dataLoaded: true });\n  }\n\n  render() {\n    const { dataLoaded, articles, activePage } = this.state;\n\n    let posts = (\n      <div>\n        <h1>Oops, no posts yet!</h1> <p>Please check again later.</p>\n      </div>\n    );\n    let numPosts = 0;\n    if (dataLoaded === false) {\n      return null;\n    } else {\n      const filteredArticles = articles.data.filter(\n        (article) => article.is_visible === true\n      );\n      if (\n        articles.data !== undefined &&\n        articles.data !== '404' &&\n        filteredArticles.length !== 0\n      ) {\n        numPosts = filteredArticles.length;\n        posts = (\n          <ul style={{ paddingLeft: '0' }}>\n            {filteredArticles\n              .slice((activePage - 1) * 5, activePage * 5)\n              .map((article, index) => (\n                <Post key={index} data={article} />\n              ))}\n          </ul>\n        );\n        if (Math.ceil(numPosts / 5) === 1) {\n          return <div>{posts}</div>;\n        }\n      } else {\n        return <div>{posts}</div>;\n      }\n    }\n    return (\n      <div>\n        {posts}\n        <Pagination\n          defaultActivePage={1}\n          totalPages={Math.ceil(numPosts / 5)}\n          onPageChange={(event, data) => this.handlePageChange(data.activePage)}\n        />\n      </div>\n    );\n  }\n}\nexport default BooksPostListView;\n","import React from 'react';\nimport axios from 'axios';\n\nimport { Pagination } from 'semantic-ui-react';\nimport Post from '../components/Post';\n\nclass InternetPostListView extends React.Component {\n  state = {\n    dataLoaded: false,\n    articles: null,\n    activePage: 1\n  };\n\n  async getData() {\n    try {\n      await axios\n        .get('https://lukezsmith.herokuapp.com/api-site/blogposts/internet/')\n        .then((res) => {\n          this.setState({ articles: res });\n        });\n    } catch (error) {\n      console.error(`error: ${error.message}`);\n      this.setState({ articles: '404' });\n    }\n  }\n\n  handlePageChange(activePage) {\n    this.setState({ activePage });\n  }\n\n  async componentDidMount() {\n    await this.getData();\n    this.setState({ dataLoaded: true });\n  }\n\n  render() {\n    const { dataLoaded, articles, activePage } = this.state;\n\n    let posts = (\n      <div>\n        <h1>Oops, no posts yet!</h1> <p>Please check again later.</p>\n      </div>\n    );\n    let numPosts = 0;\n    if (dataLoaded === false) {\n      return null;\n    } else {\n      const filteredArticles = articles.data.filter(\n        (article) => article.is_visible === true\n      );\n      if (\n        articles.data !== undefined &&\n        articles.data !== '404' &&\n        filteredArticles.length !== 0\n      ) {\n        numPosts = filteredArticles.length;\n        posts = (\n          <ul style={{ paddingLeft: '0' }}>\n            {filteredArticles\n              .slice((activePage - 1) * 5, activePage * 5)\n              .map((article, index) => (\n                <Post  key={index} data={article} />\n              ))}\n          </ul>\n        );\n        if (Math.ceil(numPosts / 5) === 1) {\n          return <div>{posts}</div>;\n        }\n      } else {\n        return <div>{posts}</div>;\n      }\n    }\n    return (\n      <div>\n        {posts}\n        <Pagination\n          defaultActivePage={1}\n          totalPages={Math.ceil(numPosts / 5)}\n          onPageChange={(event, data) => this.handlePageChange(data.activePage)}\n        />\n      </div>\n    );\n  }\n}\nexport default InternetPostListView;\n","import React from 'react';\nimport axios from 'axios';\n\nimport { Pagination } from 'semantic-ui-react';\nimport Post from '../components/Post';\n\nclass ThoughtsPostListView extends React.Component {\n  state = {\n    dataLoaded: false,\n    articles: null,\n    activePage: 1\n  };\n\n  async getData() {\n    try {\n      await axios\n        .get('https://lukezsmith.herokuapp.com/api-site/blogposts/thoughts/')\n        .then((res) => {\n          this.setState({ articles: res });\n        });\n    } catch (error) {\n      console.error(`error: ${error.message}`);\n      this.setState({ articles: '404' });\n    }\n  }\n\n  handlePageChange(activePage) {\n    this.setState({ activePage });\n  }\n\n  async componentDidMount() {\n    await this.getData();\n    this.setState({ dataLoaded: true });\n  }\n\n  render() {\n    const { dataLoaded, articles, activePage } = this.state;\n\n    let posts = (\n      <div>\n        <h1>Oops, no posts yet!</h1> <p>Please check again later.</p>\n      </div>\n    );\n\n    let numPosts = 0;\n    if (dataLoaded === false) {\n      return null;\n    } else {\n      const filteredArticles = articles.data.filter(\n        (article) => article.is_visible === true\n      );\n      if (\n        articles.data !== undefined &&\n        articles.data !== '404' &&\n        filteredArticles.length !== 0\n      ) {\n        numPosts = filteredArticles.length;\n        posts = (\n          <ul style={{ paddingLeft: '0' }}>\n            {filteredArticles\n              .slice((activePage - 1) * 5, activePage * 5)\n              .map((article, index) => (\n                <Post key={index} data={article} />\n              ))}\n          </ul>\n        );\n        if (Math.ceil(numPosts / 5) === 1) {\n          return <div>{posts}</div>;\n        }\n      } else {\n        return <div>{posts}</div>;\n      }\n    }\n    return (\n      <div>\n        {posts}\n        <Pagination\n          defaultActivePage={1}\n          totalPages={Math.ceil(numPosts / 5)}\n          onPageChange={(event, data) => this.handlePageChange(data.activePage)}\n        />\n      </div>\n    );\n  }\n}\nexport default ThoughtsPostListView;\n","import React from 'react';\nimport axios from 'axios';\n\nimport { Pagination } from 'semantic-ui-react';\nimport Post from '../components/Post';\n\nclass ArtPostListView extends React.Component {\n  state = {\n    dataLoaded: false,\n    articles: null,\n    activePage: 1\n  };\n\n  async getData() {\n    try {\n      await axios\n        .get('https://lukezsmith.herokuapp.com/api-site/blogposts/art/')\n        .then((res) => {\n          this.setState({ articles: res });\n        });\n    } catch (error) {\n      console.error(`error: ${error.message}`);\n      this.setState({ articles: '404' });\n    }\n  }\n\n  handlePageChange(activePage) {\n    this.setState({ activePage });\n  }\n\n  async componentDidMount() {\n    await this.getData();\n    this.setState({ dataLoaded: true });\n  }\n\n  render() {\n    const { dataLoaded, articles, activePage } = this.state;\n\n    let posts = (\n      <div>\n        <h1>Oops, no posts yet!</h1> <p>Please check again later.</p>\n      </div>\n    );\n    let numPosts = 0;\n    if (dataLoaded === false) {\n      return null;\n    } else {\n      const filteredArticles = articles.data.filter(\n        (article) => article.is_visible === true\n      );\n      if (\n        articles.data !== undefined &&\n        articles.data !== '404' &&\n        filteredArticles.length !== 0\n      ) {\n        numPosts = filteredArticles.length;\n        posts = (\n          <ul style={{ paddingLeft: '0' }}>\n            {filteredArticles\n              .slice((activePage - 1) * 5, activePage * 5)\n              .map((article, index) => (\n                <Post key={index} data={article} />\n              ))}\n          </ul>\n        );\n        if (Math.ceil(numPosts / 5) === 1) {\n          return <div>{posts}</div>;\n        }\n      } else {\n        return <div>{posts}</div>;\n      }\n    }\n    return (\n      <div>\n        {posts}\n        <Pagination\n          defaultActivePage={1}\n          totalPages={Math.ceil(numPosts / 5)}\n          onPageChange={(event, data) => this.handlePageChange(data.activePage)}\n        />\n      </div>\n    );\n  }\n}\nexport default ArtPostListView;\n","/* eslint-disable prettier/prettier */\nimport React from 'react';\n\nfunction AboutView() {\n  return (\n    <div id='about-section'>\n      <h1>About me</h1>\n\n      <div>\n        Hi there! My name is Luke. I write code, but I am trying to start\n        writing more words. The thing I care about most is human development, so\n        I think a lot about building ambitious things and the\n        new ways we will live our lives in the future.\n      </div>\n\n      <div>\n        When I'm not developing things, I'm usually trying to find\n        interesting things to think about. I usually find these through books, music and art. I also enjoy dabbling in photography and digital artwork generation through deep learning.\n      </div>\n\n\n      <div>\n        <h3>Main interests</h3>\n        <ul className='about-list'>\n          <li>The future of online communities</li>\n          <li>The future of information creation and discovery</li>\n          <li>Online communities/institutions for fostering innovation </li>\n          <li>The future of online identity</li>\n          <li>Autodidactism</li> \n        </ul>\n      </div>\n\n      <div>\n        <h3>Favourite books</h3>\n        <div>\n          I love books and always like seeing what people are reading, so here's a list of my favourites.\n          <br />\n          You can also find a more comprehensive list on my{' '}\n          <a href='https://www.goodreads.com/lukezsmith'>Goodreads</a>.\n        </div>\n        <ul className='about-list'>\n          <li>\n            <a\n              className='book_a_tag'\n              href='https://www.amazon.co.uk/Snow-Crash-Neal-Stephenson/dp/0241953189'\n            >\n              Snow Crash\n            </a>\n            : The classic that gave birth to the idea of the Metaverse.\n          </li>\n          <li>\n            <a\n              className='book_a_tag'\n              href='https://www.amazon.co.uk/Hackers-Heroes-Computer-Revolution-Anniversary-ebook/dp/B003PDMKIY'\n            >\n              Hackers\n            </a>\n            : The best book I have read that distills the beauty and excitement\n            of innovation and the communities that foster it.\n          </li>\n          <li>\n            <a\n              className='book_a_tag'\n              href='https://www.amazon.co.uk/Brothers-Karamazov-Fyodor-Dostoevsky/dp/0099922800'\n            >\n              The Brother's Karamazov\n            </a>\n            : One of the only classics to actually live up to the title. Offers\n            a crash course of life in just ~800 pages.\n          </li>\n          <li>\n            <a\n              className='book_a_tag'\n              href='https://www.amazon.co.uk/Siddhartha-Hermann-Hesse/dp/0141189576'\n            >\n              Siddhartha\n            </a>\n            : Beautiful book that changed my mind on a lot of things.\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default AboutView;\n","import React from 'react';\n\nfunction ProjectView() {\n  return (\n    <div id='project-section'>\n      <h1>Projects</h1>\n      <div>\n        The majority of my projects can be found on my{' '}\n        <a\n          style={{ fontWeight: 'bold', color: '#385e94' }}\n          href='https://github.com/lukezsmith'\n        >\n          GitHub\n        </a>\n        .\n      </div>\n      <div>\n        I'm currently working on some exciting projects which I'll post here\n        soon.\n      </div>\n    </div>\n  );\n}\n\nexport default ProjectView;\n","import React from 'react';\n\nfunction ContactView() {\n  return (\n    <div id='contact-section'>\n      <h1>Contact</h1>\n\n      <div>\n        The best place to catch me is on Twitter at{' '}\n        <b>\n          <a href='https://twitter.com/lukezsmith'>@lukezsmith</a>\n        </b>\n      </div>\n    </div>\n  );\n}\n\nexport default ContactView;\n","import React from 'react';\nimport axios from 'axios';\n\nimport { Loader } from 'semantic-ui-react';\n\nclass BookshelfView extends React.Component {\n  state = {\n    articles: null\n  };\n\n  componentDidMount() {\n    const getData = async () => {\n      try {\n        return await axios.get(\n          'https://lukezsmith.herokuapp.com/api-site/books/books/'\n        );\n      } catch (error) {\n        this.setState({ articles: '404' });\n      }\n      return 0;\n    };\n    const evalData = async () => {\n      const data = await getData();\n      if (data !== undefined) {\n        this.setState({ articles: data });\n      } else {\n        this.setState({ articles: '404' });\n      }\n    };\n\n    evalData();\n  }\n\n  render() {\n    const { articles } = this.state;\n    if (articles === null) {\n      return (\n        <div>\n          <Loader>Loading</Loader>\n        </div>\n      );\n    }\n\n    articles.data.forEach((item, index) => {\n      if (item.is_visible === false) {\n        articles.data.splice(index, 1);\n      }\n    });\n\n    let bookHtml = (\n      <div id='bookshelf-content'>\n          <h1>Bookshelf</h1>\n          <p id='lead-text'>\n            I love books and find it interesting to know what kinds of books\n            people are reading. \n            <br />\n            <br />\n            \n            Once upon a time this page was a list of all of the books I had read that had \n            some impact on me, but updating it was becoming a chore. \n            Instead of a list that will never get updated, you can find every book I've read on my{' '}\n            <a href='https://www.goodreads.com/lukezsmith'>\n              Goodreads\n            </a>\n            .\n            <br />\n            <br />\n          </p>\n        </div>\n    )\n    return <div>{bookHtml}</div>;\n  }\n}\nexport default BookshelfView;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport PostView from './containers/PostView';\nimport PostListView from './containers/PostListView';\nimport ProgrammingPostListView from './containers/ProgrammingPostListView';\nimport BooksPostListView from './containers/BooksPostListView';\nimport InternetPostListView from './containers/InternetPostListView';\nimport ThoughtsPostListView from './containers/ThoughtsPostListView';\nimport ArtPostListView from './containers/ArtPostListView';\nimport AboutView from './containers/AboutView';\nimport ProjectView from './containers/ProjectView';\nimport ContactView from './containers/ContactView';\nimport BookshelfView from './containers/BookshelfView';\nimport NotFoundView from './components/NotFoundView';\n\nconst BaseRouter = () => (\n  \n  <div>\n    <Switch>\n      <Route exact path='/' component={PostListView}/>\n      <Route path='/about/' component={AboutView}/>\n      <Route path='/projects/' component={ProjectView}/>\n      <Route path='/bookshelf/' component={BookshelfView}/>\n      <Route path='/contact/' component={ContactView}/>\n      <Route path='/post/:articleSlug/' component={PostView}/>\n      <Route exact path='/tag/development/' component={ProgrammingPostListView}/>\n      <Route exact path='/tag/books/' component={BooksPostListView}/>\n      <Route exact path='/tag/thoughts/' component={ThoughtsPostListView}/>\n      <Route exact path='/tag/web3' component={InternetPostListView}/>\n      <Route exact path='/tag/art' component={ArtPostListView}/>\n      <Route path='/*' component={NotFoundView}/>\n    </Switch>\n  </div>\n);\nexport default BaseRouter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\nimport { Grid, Button } from 'semantic-ui-react';\n\nclass BaseLayout extends React.Component {\n  render() {\n    const { children } = this.props;\n    return (\n      <div id='main-section'>\n        <Grid id='main-grid' stackable columns={2}>\n          <Grid.Column id='sidebar-col' width={2}>\n            <NavLink style={{ border: 'none' }} to='/'>\n              <Button className='btn'>lukezsmith</Button>\n            </NavLink>\n            <ul id='navlinks'>\n              <li>\n                <NavLink to='/'>Posts</NavLink>\n              </li>\n              <li>\n                <NavLink to='/about'>About</NavLink>\n              </li>\n              <li>\n                <NavLink to='/projects'>Projects</NavLink>\n              </li>\n              <li>\n                <NavLink to='/bookshelf'>Bookshelf</NavLink>\n              </li>\n              <li>\n                <NavLink to='/contact'>Contact</NavLink>\n              </li>\n            </ul>\n            <p id='categories-header'>Things that can be found on this site:</p>\n            <ul className='categories'>\n              <li>\n                Development-related content:{' '}\n                <b>\n                  <NavLink to='/tag/development'>#development</NavLink>\n                </b>\n              </li>\n\n              <li>\n                All things books:{' '}\n                <b>\n                  <NavLink to='/tag/books'>#books</NavLink>\n                </b>\n              </li>\n              \n              <li>\n                Random thoughts and ideas I have:{' '}\n                <b>\n                  <NavLink to='/tag/thoughts'>#thoughts</NavLink>\n                </b>\n              </li>\n\n              <li>\n                Photography and GAN creations:{' '}\n                <b>\n                  <NavLink to='/tag/art'>#art</NavLink>\n                </b>\n              </li>\n\n              <li>\n                For occasional updates, here's my{' '}\n                <b>\n                  <a href='http://eepurl.com/gb_zzf'>newsletter</a>\n                </b>\n              </li>\n            </ul>\n          </Grid.Column>\n          <Grid.Column id='content-col' width={13}>\n            {children}\n          </Grid.Column>\n        </Grid>\n      </div>\n    );\n  }\n}\nBaseLayout.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.string, PropTypes.func, PropTypes.element]).isRequired\n};\n\nexport default BaseLayout;\n","/* eslint-disable prettier/prettier */\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport ReactGA from 'react-ga';\nimport BaseRouter from './routes';\nimport 'semantic-ui-css/semantic.min.css';\nimport './App.css';\nimport BaseLayout from './containers/BaseLayout';\n\nReactGA.initialize('UA-142802186-1');\n\nclass App extends Component {\n\tcomponentDidMount = () => {\n\t\tReactGA.pageview(window.location.pathname + window.location.search);\n\t};\n\n\tcomponentDidUpdate = () =>\n\t\tReactGA.pageview(window.location.pathname + window.location.search);\n\n\trender() {\n\t\treturn (\n\t\t\t<div className='App'>\n\t\t\t\t<Router>\n\t\t\t\t\t<BaseLayout>\n\t\t\t\t\t\t<BaseRouter />\n\t\t\t\t\t</BaseLayout>\n\t\t\t\t</Router>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}